<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Leaflet</title>

	<!---Leaflet CSS-->
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />

	<style>
		#map {
			width: 100%;
			height: 100vh;
		}
	</style>

</head>
<body>
	<div id="map"></div>

	<!---Leaflet JS-->
	<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

	<script>
		// Map Initialization
		var map = L.map('map').setView([12.8797,  121.7740], 10);

		// osm layer
		var osm = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
		});


		// google street map
		googleStreets = L.tileLayer('http://{s}.google.com/vt?lyrs=m&x={x}&y={y}&z={z}',{
			maxZoom: 20,
			subdomains:['mt0','mt1','mt2','mt3']
		});

		googleStreets.addTo(map);

		// Marker
		var singleMarker = L.marker([12.8797,  121.7740]);
		var popup = singleMarker.bindPopup('<b>Philippines</b>').openPopup()
		popup.addTo(map);


		// Layer Control
		var baseMaps = {
			"OSM": osm,
			"Google Streets": googleStreets,
		};

		var overlayMaps = {
			"Marker": singleMarker	
		};

		L.control.layers(baseMaps, overlayMaps).addTo(map);

        // Real Time Location Tracker
        if(!navigator.geolocation) {
            console.log("Your browser does not support this feature:(")
        } else {
            setInterval(() => {
                navigator.geolocation.getCurrentPosition(getPosition)
            }, 5000);   
        }

        var marker, circle;


        function getPosition(position) {
            console.log(position.coords.latitude, position.coords.longitude)
            var lat = position.coords.latitude
            var long = position.coords.longitude   
            var accuracy = position.coords.accuracy

            if (marker) {
                map.removeLayer(marker)
            }

            if (circle) {
                map.removeLayer(circle)
            }

            marker = L.marker([lat, long])
            circle = L.circle([lat, long], {radius: accuracy})

            var featureGroup = L.featureGroup([marker, circle]).addTo(map);

            map.fitBounds(featureGroup.getBounds())

            console.log("Your current location is, Lat: ", lat,"Long:", long, "Accuracy:", accuracy)

        }
	</script>
	
</body>
</html>